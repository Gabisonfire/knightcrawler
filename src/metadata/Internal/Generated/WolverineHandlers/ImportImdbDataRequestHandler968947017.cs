// <auto-generated/>
#pragma warning disable
using Metadata.Features.Configuration;
using Microsoft.Extensions.Logging;

namespace Internal.Generated.WolverineHandlers
{
    // START: ImportImdbDataRequestHandler968947017
    public class ImportImdbDataRequestHandler968947017 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Microsoft.Extensions.Logging.ILogger<Metadata.Features.ImportImdbData.ImportImdbDataRequestHandler> _logger1;
        private readonly Metadata.Features.Configuration.ServiceConfiguration _serviceConfiguration;
        private readonly Metadata.Features.Configuration.PostgresConfiguration _postgresConfiguration;
        private readonly Microsoft.Extensions.Logging.ILogger<Metadata.Features.ImportImdbData.ImdbDbService> _logger2;

        public ImportImdbDataRequestHandler968947017(Microsoft.Extensions.Logging.ILogger<Metadata.Features.ImportImdbData.ImportImdbDataRequestHandler> __logger1, Metadata.Features.Configuration.ServiceConfiguration serviceConfiguration, Metadata.Features.Configuration.PostgresConfiguration postgresConfiguration, Microsoft.Extensions.Logging.ILogger<Metadata.Features.ImportImdbData.ImdbDbService> __logger2)
        {
            _logger1 = __logger1;
            _serviceConfiguration = serviceConfiguration;
            _postgresConfiguration = postgresConfiguration;
            _logger2 = __logger2;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            var imdbDbService = new Metadata.Features.ImportImdbData.ImdbDbService(_postgresConfiguration, _logger2);
            var importImdbDataRequestHandler = new Metadata.Features.ImportImdbData.ImportImdbDataRequestHandler(_logger1, imdbDbService, _serviceConfiguration);
            // The actual message body
            var importImdbDataRequest = (Metadata.Features.ImportImdbData.ImportImdbDataRequest)context.Envelope.Message;

            
            // The actual message execution
            var outgoing1 = await importImdbDataRequestHandler.Handle(importImdbDataRequest, cancellation).ConfigureAwait(false);

            
            // Outgoing, cascaded message
            await context.EnqueueCascadingAsync(outgoing1).ConfigureAwait(false);

        }

    }

    // END: ImportImdbDataRequestHandler968947017
    
    
}

