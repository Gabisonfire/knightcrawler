{{ if .Values.infrastructure.redis.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: '{{ .Release.Name }}-redis'
  labels:
    component: redis
    project: '{{ .Chart.Name }}'
    release: '{{ .Release.Name }}'
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
spec:
  serviceName: '{{ .Release.Name }}-redis'
  replicas: 1
  selector:
    matchLabels:
      component: redis
      release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        component: redis
        release: '{{ .Release.Name }}'
    spec:
      containers:
        - name: redis
          image: '{{ .Values.infrastructure.redis.image }}:{{ .Values.infrastructure.redis.tag }}'
          ports:
            - name: redis
              containerPort: 6379
          envFrom:
            - configMapRef:
                name: '{{ .Release.Name }}-config'
            - secretRef:
                name: '{{ .Release.Name }}-secrets'
          volumeMounts:
            - mountPath: /data
              name: redis
          livenessProbe:
            exec:
              command:
                - redis-cli ping
            periodSeconds: 10
            initialDelaySeconds: 10
            successThreshold: 1
            failureThreshold: 3
  volumeClaimTemplates:
    - metadata:
        name: redis
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: '{{ .Values.persistence.redis.capacity }}'
{{- end -}}